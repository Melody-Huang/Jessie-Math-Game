{"ast":null,"code":"var _jsxFileName = \"/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/MathDinosaurGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Balloon from './components/Balloon';\nimport DinosaurImage from './components/DinosaurImage';\nimport TreasureChest from './components/TreasureChest';\nimport './MathDinosaurGame.css'; // We'll create this file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return {\n    problem: `${num1} + ${num2}`,\n    result: num1 + num2\n  };\n};\nconst generateBalloonPositions = () => {\n  return Array(5).fill().map(() => ({\n    left: `${Math.random() * 80}%`,\n    animationDuration: `${15 + Math.random() * 10}s` // Slow float\n  }));\n};\nconst MathDinosaurGame = () => {\n  _s();\n  const [problem, setProblem] = useState(generateMathProblem());\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('notStarted');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState(0);\n  const [balloonPositions, setBalloonPositions] = useState(generateBalloonPositions());\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n  const handleAnswer = userAnswer => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      setEggs(prevEggs => prevEggs + 1);\n      if (score + 1 >= 5) {\n        // Every 5 correct answers\n        setRewards(prevRewards => prevRewards + 1);\n        setScore(0);\n      }\n    } else {\n      if (eggs > 1) {\n        setEggs(prevEggs => prevEggs - 1);\n      } else {\n        setGameState('gameOver');\n      }\n    }\n    generateNewProblem();\n  };\n  const startGame = () => {\n    setGameState('playing');\n    generateNewProblem();\n  };\n  const resetGame = () => {\n    setScore(0);\n    setEggs(1);\n    setRewards(0);\n    setGameState('notStarted');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"math-dinosaur-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Dragon Math Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), gameState === 'notStarted' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem\",\n        children: [problem.problem, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balloons-container\",\n        children: balloonPositions.map((position, index) => /*#__PURE__*/_jsxDEV(Balloon, {\n          number: index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1,\n          onClick: () => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1),\n          style: position\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DinosaurImage, {\n        stage: gameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"treasure-chests\",\n        children: [/*#__PURE__*/_jsxDEV(TreasureChest, {\n          title: \"Egg Nest\",\n          content: `${eggs} egg${eggs !== 1 ? 's' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TreasureChest, {\n          title: \"Rewards\",\n          content: `${rewards} dragon${rewards !== 1 ? 's' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'gameOver' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You collected \", rewards, \" dragons!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MathDinosaurGame, \"eGJaUfX3c8r+OYbepWvBKuwav9U=\");\n_c = MathDinosaurGame;\nexport default MathDinosaurGame;\nvar _c;\n$RefreshReg$(_c, \"MathDinosaurGame\");","map":{"version":3,"names":["React","useState","useEffect","Balloon","DinosaurImage","TreasureChest","jsxDEV","_jsxDEV","Fragment","_Fragment","generateMathProblem","num1","Math","floor","random","num2","problem","result","generateBalloonPositions","Array","fill","map","left","animationDuration","MathDinosaurGame","_s","setProblem","score","setScore","gameState","setGameState","eggs","setEggs","rewards","setRewards","balloonPositions","setBalloonPositions","generateNewProblem","handleAnswer","userAnswer","prevScore","prevEggs","prevRewards","startGame","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","position","index","number","style","stage","title","content","_c","$RefreshReg$"],"sources":["/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/MathDinosaurGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Balloon from './components/Balloon';\nimport DinosaurImage from './components/DinosaurImage';\nimport TreasureChest from './components/TreasureChest';\nimport './MathDinosaurGame.css'; // We'll create this file for styling\n\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return { problem: `${num1} + ${num2}`, result: num1 + num2 };\n};\n\nconst generateBalloonPositions = () => {\n  return Array(5).fill().map(() => ({\n    left: `${Math.random() * 80}%`,\n    animationDuration: `${15 + Math.random() * 10}s`, // Slow float\n  }));\n};\n\nconst MathDinosaurGame = () => {\n  const [problem, setProblem] = useState(generateMathProblem());\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('notStarted');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState(0);\n  const [balloonPositions, setBalloonPositions] = useState(generateBalloonPositions());\n\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n\n  const handleAnswer = (userAnswer) => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      setEggs(prevEggs => prevEggs + 1);\n      if (score + 1 >= 5) { // Every 5 correct answers\n        setRewards(prevRewards => prevRewards + 1);\n        setScore(0);\n      }\n    } else {\n      if (eggs > 1) {\n        setEggs(prevEggs => prevEggs - 1);\n      } else {\n        setGameState('gameOver');\n      }\n    }\n    generateNewProblem();\n  };\n\n  const startGame = () => {\n    setGameState('playing');\n    generateNewProblem();\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setEggs(1);\n    setRewards(0);\n    setGameState('notStarted');\n  };\n\n  return (\n    <div className=\"math-dinosaur-game\">\n      <h1 className=\"game-title\">Dragon Math Game</h1>\n      {gameState === 'notStarted' && (\n        <button className=\"start-button\" onClick={startGame}>Start Game</button>\n      )}\n      {gameState === 'playing' && (\n        <>\n          <div className=\"problem\">{problem.problem} = ?</div>\n          <div className=\"balloons-container\">\n            {balloonPositions.map((position, index) => (\n              <Balloon\n                key={index}\n                number={index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1}\n                onClick={() => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1)}\n                style={position}\n              />\n            ))}\n          </div>\n          <DinosaurImage stage={gameState} />\n          <div className=\"treasure-chests\">\n            <TreasureChest title=\"Egg Nest\" content={`${eggs} egg${eggs !== 1 ? 's' : ''}`} />\n            <TreasureChest title=\"Rewards\" content={`${rewards} dragon${rewards !== 1 ? 's' : ''}`} />\n          </div>\n        </>\n      )}\n      {gameState === 'gameOver' && (\n        <div className=\"game-over\">\n          <h2>Game Over!</h2>\n          <p>You collected {rewards} dragons!</p>\n          <button className=\"reset-button\" onClick={resetGame}>Play Again</button>\n        </div>\n      )}\n      {gameState === 'playing' && (\n        <button className=\"reset-button\" onClick={resetGame}>Reset Game</button>\n      )}\n    </div>\n  );\n};\n\nexport default MathDinosaurGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}