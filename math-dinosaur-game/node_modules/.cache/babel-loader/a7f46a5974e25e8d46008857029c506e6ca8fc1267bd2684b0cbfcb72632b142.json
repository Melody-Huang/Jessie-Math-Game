{"ast":null,"code":"var _jsxFileName = \"/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/MathDinosaurGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Balloon from './components/Balloon';\nimport DinosaurImage from './components/DinosaurImage';\nimport TreasureChest from './components/TreasureChest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return {\n    problem: `${num1} + ${num2}`,\n    result: num1 + num2\n  };\n};\nconst generateBalloonPositions = () => {\n  return Array(5).fill().map(() => ({\n    left: `${Math.random() * 80}%`,\n    top: `${Math.random() * 60}%`\n  }));\n};\nconst MathDinosaurGame = () => {\n  _s();\n  const [problem, setProblem] = useState(generateMathProblem());\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('egg');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState(0);\n  const [balloonPositions, setBalloonPositions] = useState(generateBalloonPositions());\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n  const handleAnswer = userAnswer => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      // Add more game logic here\n    }\n    generateNewProblem();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"math-dinosaur-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem\",\n      children: [problem.problem, \" = ?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balloons\",\n      children: balloonPositions.map((position, index) => /*#__PURE__*/_jsxDEV(Balloon, {\n        number: index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1,\n        onClick: () => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1),\n        style: position\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DinosaurImage, {\n      stage: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"treasure-chests\",\n      children: [/*#__PURE__*/_jsxDEV(TreasureChest, {\n        title: \"Egg Nest\",\n        content: `${eggs} egg${eggs !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TreasureChest, {\n        title: \"Rewards\",\n        content: `${rewards} dino${rewards !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MathDinosaurGame, \"nCcVSoosMwrSoe7Fx3ZRYSkcPZo=\");\n_c = MathDinosaurGame;\nexport default MathDinosaurGame;\nvar _c;\n$RefreshReg$(_c, \"MathDinosaurGame\");","map":{"version":3,"names":["React","useState","useEffect","Balloon","DinosaurImage","TreasureChest","jsxDEV","_jsxDEV","generateMathProblem","num1","Math","floor","random","num2","problem","result","generateBalloonPositions","Array","fill","map","left","top","MathDinosaurGame","_s","setProblem","score","setScore","gameState","setGameState","eggs","setEggs","rewards","setRewards","balloonPositions","setBalloonPositions","generateNewProblem","handleAnswer","userAnswer","prevScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","position","index","number","onClick","style","stage","title","content","_c","$RefreshReg$"],"sources":["/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/MathDinosaurGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Balloon from './components/Balloon';\nimport DinosaurImage from './components/DinosaurImage';\nimport TreasureChest from './components/TreasureChest';\n\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return { problem: `${num1} + ${num2}`, result: num1 + num2 };\n};\n\nconst generateBalloonPositions = () => {\n  return Array(5).fill().map(() => ({\n    left: `${Math.random() * 80}%`,\n    top: `${Math.random() * 60}%`,\n  }));\n};\n\nconst MathDinosaurGame = () => {\n  const [problem, setProblem] = useState(generateMathProblem());\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('egg');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState(0);\n  const [balloonPositions, setBalloonPositions] = useState(generateBalloonPositions());\n\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n\n  const handleAnswer = (userAnswer) => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      // Add more game logic here\n    }\n    generateNewProblem();\n  };\n\n  return (\n    <div className=\"math-dinosaur-game\">\n      <div className=\"problem\">{problem.problem} = ?</div>\n      <div className=\"balloons\">\n        {balloonPositions.map((position, index) => (\n          <Balloon\n            key={index}\n            number={index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1}\n            onClick={() => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1)}\n            style={position}\n          />\n        ))}\n      </div>\n      <DinosaurImage stage={gameState} />\n      <div className=\"treasure-chests\">\n        <TreasureChest title=\"Egg Nest\" content={`${eggs} egg${eggs !== 1 ? 's' : ''}`} />\n        <TreasureChest title=\"Rewards\" content={`${rewards} dino${rewards !== 1 ? 's' : ''}`} />\n      </div>\n    </div>\n  );\n};\n\nexport default MathDinosaurGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}