{"ast":null,"code":"var _jsxFileName = \"/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/MathDinosaurGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Balloon from './components/Balloon';\nimport TreasureChest from './components/TreasureChest';\nimport './styles.css';\nimport './MathDinosaurGame.css';\nimport eggImage from './images/egg.png';\nimport hatchedImage from './images/hatched.png';\nimport babyImage from './images/baby.png';\nimport adultImage from './images/adult.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return {\n    problem: `${num1} + ${num2}`,\n    result: num1 + num2\n  };\n};\nconst generateBalloonPositions = () => {\n  return Array(5).fill().map(() => ({\n    left: `${Math.random() * 80}%`,\n    animationDuration: `${15 + Math.random() * 10}s`\n  }));\n};\nconst MathDinosaurGame = () => {\n  _s();\n  const [problem, setProblem] = useState(generateMathProblem());\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('egg');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState([]);\n  const [balloonPositions, setBalloonPositions] = useState(generateBalloonPositions());\n  const [showRewards, setShowRewards] = useState(false);\n  useEffect(() => {\n    generateNewProblem();\n  }, []);\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n  const handleAnswer = userAnswer => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      if (gameState === 'egg' && score + 1 >= 3) {\n        setGameState('hatched');\n      } else if (gameState === 'hatched' && score + 1 >= 6) {\n        setGameState('baby');\n      } else if (gameState === 'baby' && score + 1 >= 9) {\n        setGameState('adult');\n      } else if (gameState === 'adult') {\n        setRewards(prev => [...prev, 'adult']);\n        setEggs(prev => prev + 1);\n        setGameState('egg');\n        setScore(0);\n      }\n    } else {\n      if (gameState !== 'egg') {\n        setGameState('egg');\n        setScore(0);\n      } else if (eggs > 1) {\n        setEggs(prev => prev - 1);\n      } else {\n        alert('Game Over!');\n        resetGame();\n      }\n    }\n    generateNewProblem();\n  };\n  const resetGame = () => {\n    setScore(0);\n    setEggs(1);\n    setRewards([]);\n    setGameState('egg');\n    generateNewProblem();\n  };\n  const getDinosaurImage = () => {\n    switch (gameState) {\n      case 'egg':\n        return eggImage;\n      case 'hatched':\n        return hatchedImage;\n      case 'baby':\n        return babyImage;\n      case 'adult':\n        return adultImage;\n      default:\n        return eggImage;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"math-dinosaur-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Dragon Math Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem\",\n        children: [problem.problem, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(TreasureChest, {\n        title: \"Egg Nest\",\n        content: `${eggs} egg${eggs !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getDinosaurImage(),\n          alt: gameState,\n          className: \"dinosaur-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balloons-container\",\n          children: balloonPositions.map((position, index) => /*#__PURE__*/_jsxDEV(Balloon, {\n            number: index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1,\n            onClick: () => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1),\n            style: position\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TreasureChest, {\n        title: \"Rewards\",\n        content: `${rewards.length} dragon${rewards.length !== 1 ? 's' : ''}`,\n        onClick: () => setShowRewards(!showRewards)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showRewards && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rewards-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Collected Dragons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rewards-stickers\",\n        children: rewards.map((reward, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: adultImage,\n          alt: \"Adult Dragon\",\n          className: \"reward-sticker\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(MathDinosaurGame, \"6/62IGk8IBO9kyk95G4kZrq9Ls0=\");\n_c = MathDinosaurGame;\nexport default MathDinosaurGame;\nvar _c;\n$RefreshReg$(_c, \"MathDinosaurGame\");","map":{"version":3,"names":["React","useState","useEffect","Balloon","TreasureChest","eggImage","hatchedImage","babyImage","adultImage","jsxDEV","_jsxDEV","generateMathProblem","num1","Math","floor","random","num2","problem","result","generateBalloonPositions","Array","fill","map","left","animationDuration","MathDinosaurGame","_s","setProblem","score","setScore","gameState","setGameState","eggs","setEggs","rewards","setRewards","balloonPositions","setBalloonPositions","showRewards","setShowRewards","generateNewProblem","handleAnswer","userAnswer","prevScore","prev","alert","resetGame","getDinosaurImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","src","alt","position","index","number","onClick","style","length","reward","_c","$RefreshReg$"],"sources":["/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/MathDinosaurGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Balloon from './components/Balloon';\nimport TreasureChest from './components/TreasureChest';\nimport './styles.css';\nimport './MathDinosaurGame.css';\n\nimport eggImage from './images/egg.png';\nimport hatchedImage from './images/hatched.png';\nimport babyImage from './images/baby.png';\nimport adultImage from './images/adult.png';\n\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return { problem: `${num1} + ${num2}`, result: num1 + num2 };\n};\n\nconst generateBalloonPositions = () => {\n  return Array(5).fill().map(() => ({\n    left: `${Math.random() * 80}%`,\n    animationDuration: `${15 + Math.random() * 10}s`,\n  }));\n};\n\nconst MathDinosaurGame = () => {\n  const [problem, setProblem] = useState(generateMathProblem());\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('egg');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState([]);\n  const [balloonPositions, setBalloonPositions] = useState(generateBalloonPositions());\n  const [showRewards, setShowRewards] = useState(false);\n\n  useEffect(() => {\n    generateNewProblem();\n  }, []);\n\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n\n  const handleAnswer = (userAnswer) => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      if (gameState === 'egg' && score + 1 >= 3) {\n        setGameState('hatched');\n      } else if (gameState === 'hatched' && score + 1 >= 6) {\n        setGameState('baby');\n      } else if (gameState === 'baby' && score + 1 >= 9) {\n        setGameState('adult');\n      } else if (gameState === 'adult') {\n        setRewards(prev => [...prev, 'adult']);\n        setEggs(prev => prev + 1);\n        setGameState('egg');\n        setScore(0);\n      }\n    } else {\n      if (gameState !== 'egg') {\n        setGameState('egg');\n        setScore(0);\n      } else if (eggs > 1) {\n        setEggs(prev => prev - 1);\n      } else {\n        alert('Game Over!');\n        resetGame();\n      }\n    }\n    generateNewProblem();\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setEggs(1);\n    setRewards([]);\n    setGameState('egg');\n    generateNewProblem();\n  };\n\n  const getDinosaurImage = () => {\n    switch(gameState) {\n      case 'egg': return eggImage;\n      case 'hatched': return hatchedImage;\n      case 'baby': return babyImage;\n      case 'adult': return adultImage;\n      default: return eggImage;\n    }\n  };\n\n  return (\n    <div className=\"math-dinosaur-game\">\n      <h1 className=\"game-title\">Dragon Math Game</h1>\n      <div className=\"problem-container\">\n        <div className=\"problem\">{problem.problem} = ?</div>\n      </div>\n      <div className=\"game-area\">\n        <TreasureChest title=\"Egg Nest\" content={`${eggs} egg${eggs !== 1 ? 's' : ''}`} />\n        <div className=\"center-area\">\n          <img src={getDinosaurImage()} alt={gameState} className=\"dinosaur-image\" />\n          <div className=\"balloons-container\">\n            {balloonPositions.map((position, index) => (\n              <Balloon\n                key={index}\n                number={index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1}\n                onClick={() => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1)}\n                style={position}\n              />\n            ))}\n          </div>\n        </div>\n        <TreasureChest\n          title=\"Rewards\"\n          content={`${rewards.length} dragon${rewards.length !== 1 ? 's' : ''}`}\n          onClick={() => setShowRewards(!showRewards)}\n        />\n      </div>\n      {showRewards && (\n        <div className=\"rewards-window\">\n          <h3>Collected Dragons</h3>\n          <div className=\"rewards-stickers\">\n            {rewards.map((reward, index) => (\n              <img key={index} src={adultImage} alt=\"Adult Dragon\" className=\"reward-sticker\" />\n            ))}\n          </div>\n        </div>\n      )}\n      <button className=\"reset-button\" onClick={resetGame}>Reset Game</button>\n    </div>\n  );\n};\n\nexport default MathDinosaurGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}