{"ast":null,"code":"var _jsxFileName = \"/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return {\n    problem: `${num1} + ${num2}`,\n    result: num1 + num2\n  };\n};\nconst Balloon = ({\n  number,\n  onClick,\n  color,\n  style\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  onClick: onClick,\n  style: {\n    width: '60px',\n    height: '80px',\n    borderRadius: '50%',\n    background: `radial-gradient(circle at 20px 20px, ${color}, ${darkenColor(color)})`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: '20px',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    boxShadow: '2px 2px 10px rgba(0,0,0,0.3)',\n    position: 'absolute',\n    transition: 'all 15s linear',\n    ...style\n  },\n  children: [number, /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '-20px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      width: '2px',\n      height: '20px',\n      backgroundColor: darkenColor(color)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c = Balloon;\nconst darkenColor = color => {\n  let r = parseInt(color.slice(1, 3), 16),\n    g = parseInt(color.slice(3, 5), 16),\n    b = parseInt(color.slice(5, 7), 16);\n  r = Math.floor(r * 0.8);\n  g = Math.floor(g * 0.8);\n  b = Math.floor(b * 0.8);\n  return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n};\nconst DinosaurImage = ({\n  stage\n}) => {\n  let imageUrl = '/api/placeholder/100/100'; // Placeholder for egg/baby/adult dino\n  if (stage === 'egg') imageUrl = '/api/placeholder/100/100?text=Egg';\n  if (stage === 'baby') imageUrl = '/api/placeholder/100/100?text=Baby';\n  if (stage === 'adult') imageUrl = '/api/placeholder/100/100?text=Adult';\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageUrl,\n    alt: `Dinosaur ${stage}`,\n    style: {\n      width: '100px',\n      height: '100px',\n      objectFit: 'contain',\n      filter: 'drop-shadow(0px 0px 5px rgba(0,0,0,0.3))'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DinosaurImage;\nconst TreasureChest = ({\n  title,\n  content\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    width: '150px',\n    height: '120px',\n    background: 'url(/api/placeholder/150/120?text=Treasure) no-repeat center/cover',\n    position: 'relative',\n    overflow: 'hidden',\n    boxShadow: '0 5px 15px rgba(0,0,0,0.3)',\n    borderRadius: '10px',\n    border: '3px solid #8B4513'\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '0',\n      left: '0',\n      right: '0',\n      background: 'rgba(139, 69, 19, 0.7)',\n      color: '#FFD700',\n      padding: '5px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: '0',\n        fontSize: '14px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '18px',\n        fontWeight: 'bold'\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 76,\n  columnNumber: 3\n}, this);\n_c3 = TreasureChest;\nconst MathDinosaurGame = () => {\n  _s();\n  const [problem, setProblem] = useState({\n    problem: '',\n    result: 0\n  });\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('egg');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState(0);\n  const [balloonPositions, setBalloonPositions] = useState([]);\n  useEffect(() => {\n    generateNewProblem();\n    const interval = setInterval(() => {\n      setBalloonPositions(prevPositions => generateBalloonPositions(prevPositions));\n    }, 15000);\n    return () => clearInterval(interval);\n  }, []);\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n  const generateBalloonPositions = (prevPositions = []) => {\n    return [...Array(5)].map((_, index) => {\n      const prevPos = prevPositions[index] || {};\n      return {\n        left: `${10 + index * 20}%`,\n        top: `${Math.random() * 60}%`,\n        transform: `translate(${Math.random() * 10 - 5}px, ${Math.random() * 10 - 5}px)`\n      };\n    });\n  };\n  const handleAnswer = userAnswer => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      if (score + 1 >= 3) {\n        if (gameState === 'egg') {\n          setGameState('baby');\n        } else if (gameState === 'baby') {\n          setGameState('adult');\n          setRewards(prevRewards => prevRewards + 1);\n        } else {\n          setGameState('egg');\n          setEggs(prevEggs => prevEggs + 1);\n        }\n        setScore(0);\n      }\n    } else {\n      if (eggs > 1) {\n        setEggs(prevEggs => prevEggs - 1);\n        setGameState('egg');\n        setScore(0);\n      } else {\n        alert('Game Over! Click OK to restart.');\n        resetGame();\n      }\n    }\n    generateNewProblem();\n  };\n  const resetGame = () => {\n    setScore(0);\n    setEggs(1);\n    setGameState('egg');\n    setRewards(0);\n    generateNewProblem();\n  };\n  const balloonColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#98D8C8'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      textAlign: 'center',\n      padding: '20px',\n      background: 'url(/api/placeholder/1000/600?text=DinoBackground) no-repeat center/cover',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n        marginBottom: '20px'\n      },\n      children: [1, 2, 3, 4, 5].map(i => /*#__PURE__*/_jsxDEV(DinosaurImage, {\n        stage: `deco${i}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '24px',\n        margin: '20px 0',\n        color: '#004D40',\n        background: 'rgba(255,255,255,0.7)',\n        padding: '10px',\n        borderRadius: '10px'\n      },\n      children: [problem.problem, \" = ?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '300px',\n        marginBottom: '20px'\n      },\n      children: balloonPositions.map((position, index) => /*#__PURE__*/_jsxDEV(Balloon, {\n        number: index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1,\n        onClick: () => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1),\n        color: balloonColors[index],\n        style: position\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DinosaurImage, {\n      stage: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TreasureChest, {\n        title: \"Egg Nest\",\n        content: `${eggs} egg${eggs !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TreasureChest, {\n        title: \"Rewards\",\n        content: `${rewards} dino${rewards !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        backgroundColor: '#f44336',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        marginTop: '20px'\n      },\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(MathDinosaurGame, \"p0arhFAhhuewvBov3XrHhfqcYLw=\");\n_c4 = MathDinosaurGame;\nexport default MathDinosaurGame;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Balloon\");\n$RefreshReg$(_c2, \"DinosaurImage\");\n$RefreshReg$(_c3, \"TreasureChest\");\n$RefreshReg$(_c4, \"MathDinosaurGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateMathProblem","num1","Math","floor","random","num2","problem","result","Balloon","number","onClick","color","style","width","height","borderRadius","background","darkenColor","display","justifyContent","alignItems","fontSize","fontWeight","cursor","boxShadow","position","transition","children","bottom","left","transform","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","r","parseInt","slice","g","b","toString","padStart","DinosaurImage","stage","imageUrl","src","alt","objectFit","filter","_c2","TreasureChest","title","content","overflow","border","right","padding","textAlign","margin","_c3","MathDinosaurGame","_s","setProblem","score","setScore","gameState","setGameState","eggs","setEggs","rewards","setRewards","balloonPositions","setBalloonPositions","generateNewProblem","interval","setInterval","prevPositions","generateBalloonPositions","clearInterval","Array","map","_","index","prevPos","top","handleAnswer","userAnswer","prevScore","prevRewards","prevEggs","alert","resetGame","balloonColors","fontFamily","minHeight","flexDirection","marginBottom","i","marginTop","_c4","$RefreshReg$"],"sources":["/Users/melody/Google Drive/UC Berkeley/python practice/Side Projects/dinosaur-game/math-dinosaur-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst generateMathProblem = () => {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  return { problem: `${num1} + ${num2}`, result: num1 + num2 };\n};\n\nconst Balloon = ({ number, onClick, color, style }) => (\n  <div\n    onClick={onClick}\n    style={{\n      width: '60px',\n      height: '80px',\n      borderRadius: '50%',\n      background: `radial-gradient(circle at 20px 20px, ${color}, ${darkenColor(color)})`,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'white',\n      fontSize: '20px',\n      fontWeight: 'bold',\n      cursor: 'pointer',\n      boxShadow: '2px 2px 10px rgba(0,0,0,0.3)',\n      position: 'absolute',\n      transition: 'all 15s linear',\n      ...style,\n    }}\n  >\n    {number}\n    <div style={{\n      position: 'absolute',\n      bottom: '-20px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      width: '2px',\n      height: '20px',\n      backgroundColor: darkenColor(color),\n    }} />\n  </div>\n);\n\nconst darkenColor = (color) => {\n  let r = parseInt(color.slice(1, 3), 16),\n      g = parseInt(color.slice(3, 5), 16),\n      b = parseInt(color.slice(5, 7), 16);\n\n  r = Math.floor(r * 0.8);\n  g = Math.floor(g * 0.8);\n  b = Math.floor(b * 0.8);\n\n  return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n};\n\nconst DinosaurImage = ({ stage }) => {\n  let imageUrl = '/api/placeholder/100/100';  // Placeholder for egg/baby/adult dino\n  if (stage === 'egg') imageUrl = '/api/placeholder/100/100?text=Egg';\n  if (stage === 'baby') imageUrl = '/api/placeholder/100/100?text=Baby';\n  if (stage === 'adult') imageUrl = '/api/placeholder/100/100?text=Adult';\n\n  return (\n    <img\n      src={imageUrl}\n      alt={`Dinosaur ${stage}`}\n      style={{\n        width: '100px',\n        height: '100px',\n        objectFit: 'contain',\n        filter: 'drop-shadow(0px 0px 5px rgba(0,0,0,0.3))'\n      }}\n    />\n  );\n};\n\nconst TreasureChest = ({ title, content }) => (\n  <div style={{\n    width: '150px',\n    height: '120px',\n    background: 'url(/api/placeholder/150/120?text=Treasure) no-repeat center/cover',\n    position: 'relative',\n    overflow: 'hidden',\n    boxShadow: '0 5px 15px rgba(0,0,0,0.3)',\n    borderRadius: '10px',\n    border: '3px solid #8B4513',\n  }}>\n    <div style={{\n      position: 'absolute',\n      bottom: '0',\n      left: '0',\n      right: '0',\n      background: 'rgba(139, 69, 19, 0.7)',\n      color: '#FFD700',\n      padding: '5px',\n      textAlign: 'center',\n    }}>\n      <h3 style={{ margin: '0', fontSize: '14px' }}>{title}</h3>\n      <div style={{ fontSize: '18px', fontWeight: 'bold' }}>{content}</div>\n    </div>\n  </div>\n);\n\nconst MathDinosaurGame = () => {\n  const [problem, setProblem] = useState({ problem: '', result: 0 });\n  const [score, setScore] = useState(0);\n  const [gameState, setGameState] = useState('egg');\n  const [eggs, setEggs] = useState(1);\n  const [rewards, setRewards] = useState(0);\n  const [balloonPositions, setBalloonPositions] = useState([]);\n\n  useEffect(() => {\n    generateNewProblem();\n    const interval = setInterval(() => {\n      setBalloonPositions(prevPositions => generateBalloonPositions(prevPositions));\n    }, 15000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const generateNewProblem = () => {\n    setProblem(generateMathProblem());\n    setBalloonPositions(generateBalloonPositions());\n  };\n\n  const generateBalloonPositions = (prevPositions = []) => {\n    return [...Array(5)].map((_, index) => {\n      const prevPos = prevPositions[index] || {};\n      return {\n        left: `${10 + (index * 20)}%`,\n        top: `${Math.random() * 60}%`,\n        transform: `translate(${Math.random() * 10 - 5}px, ${Math.random() * 10 - 5}px)`,\n      };\n    });\n  };\n\n  const handleAnswer = (userAnswer) => {\n    if (userAnswer === problem.result) {\n      setScore(prevScore => prevScore + 1);\n      if (score + 1 >= 3) {\n        if (gameState === 'egg') {\n          setGameState('baby');\n        } else if (gameState === 'baby') {\n          setGameState('adult');\n          setRewards(prevRewards => prevRewards + 1);\n        } else {\n          setGameState('egg');\n          setEggs(prevEggs => prevEggs + 1);\n        }\n        setScore(0);\n      }\n    } else {\n      if (eggs > 1) {\n        setEggs(prevEggs => prevEggs - 1);\n        setGameState('egg');\n        setScore(0);\n      } else {\n        alert('Game Over! Click OK to restart.');\n        resetGame();\n      }\n    }\n    generateNewProblem();\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setEggs(1);\n    setGameState('egg');\n    setRewards(0);\n    generateNewProblem();\n  };\n\n  const balloonColors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#98D8C8'];\n\n  return (\n    <div style={{\n      fontFamily: 'Arial, sans-serif',\n      textAlign: 'center',\n      padding: '20px',\n      background: 'url(/api/placeholder/1000/600?text=DinoBackground) no-repeat center/cover',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <div style={{ display: 'flex', justifyContent: 'space-around', width: '100%', marginBottom: '20px' }}>\n        {[1, 2, 3, 4, 5].map(i => (\n          <DinosaurImage key={i} stage={`deco${i}`} />\n        ))}\n      </div>\n\n      <div style={{ fontSize: '24px', margin: '20px 0', color: '#004D40', background: 'rgba(255,255,255,0.7)', padding: '10px', borderRadius: '10px' }}>\n        {problem.problem} = ?\n      </div>\n\n      <div style={{ position: 'relative', width: '100%', height: '300px', marginBottom: '20px' }}>\n        {balloonPositions.map((position, index) => (\n          <Balloon\n            key={index}\n            number={index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1}\n            onClick={() => handleAnswer(index === 0 ? problem.result : Math.floor(Math.random() * 20) + 1)}\n            color={balloonColors[index]}\n            style={position}\n          />\n        ))}\n      </div>\n\n      <DinosaurImage stage={gameState} />\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginTop: '20px' }}>\n        <TreasureChest title=\"Egg Nest\" content={`${eggs} egg${eggs !== 1 ? 's' : ''}`} />\n        <TreasureChest title=\"Rewards\" content={`${rewards} dino${rewards !== 1 ? 's' : ''}`} />\n      </div>\n\n      <button onClick={resetGame} style={{\n        padding: '10px 20px',\n        fontSize: '16px',\n        backgroundColor: '#f44336',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        marginTop: '20px',\n      }}>\n        Reset Game\n      </button>\n    </div>\n  );\n};\n\nexport default MathDinosaurGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}